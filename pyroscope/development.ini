#
# pyroscope - Pylons development environment configuration
#
# The %(here)s variable will be replaced with the parent directory of this file
#
[DEFAULT]
debug = true
# Uncomment and replace with the address which should receive any error reports
#email_to = you@yourdomain.com
smtp_server = localhost
error_email_from = paste@localhost

[server:main]
use = egg:Paste#http
#host = 127.0.0.1
host = 0.0.0.0
#host = cube
port = 8666

[app:main]
use = egg:pyroscope
full_stack = true
static_files = true
access_log = true

pyroscope.timezone = +02:00

cache_dir = %(here)s/www-data
beaker.session.key = pyroscope
beaker.session.secret = somesecret

# If you'd like to fine-tune the individual locations of the cache data dirs
# for the Cache data, or the Session saves, un-comment the desired settings
# here:
#beaker.cache.data_dir = %(here)s/www-data/cache
#beaker.session.data_dir = %(here)s/www-data/sessions

# WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
# Debug mode will enable the interactive debugging tool, allowing ANYONE to
# execute malicious code after an exception is raised.
#set debug = false


# Logging configuration
[loggers]
keys = root, wsgi, routes, pyroscope

[handlers]
keys = console, accesslog, errorlog

[formatters]
keys = generic, accesslog

# Send messages that are not caught by other loggers to the console
[logger_root]
level = INFO
handlers = console

# Send all messages to the 'wsgi' logger to the accesslog and errorlog handlers
[logger_wsgi]
level = NOTSET
handlers = accesslog,errorlog
qualname = wsgi
propagate = 0

# Routes (the URL dispatcher) sends debug information to the 'routes.middleware' logger
# with DEBUG level.
[logger_routes]
level = NOTSET
handlers = console
qualname = routes.middleware
propagate = 0

[logger_pyroscope]
level = DEBUG
handlers = console
qualname = pyroscope

# Handler for printing messages to the console
[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

# Handler for writing access.log style log lines to an "access.log" file
[handler_accesslog]
class = FileHandler
args = ('./www-data/access.log','a')
level = INFO
formatter = accesslog

# Handler for writing error messages to an "error.log" file
[handler_errorlog]
class = FileHandler
args = ('./www-data/error.log','a')
level = WARNING
formatter = generic

# A generic formatter that prints the time, the logger's name, the level and the message
[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S

# A trivial formatter that just passes-through the log message.
# Translogger already creates Apache-style log messages. No need to change that.
[formatter_accesslog]
format = %(message)s

