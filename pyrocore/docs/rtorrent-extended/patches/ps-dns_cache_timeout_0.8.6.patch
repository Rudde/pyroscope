--- orig/src/command_network.cc	2009-11-12 09:19:40.000000000 +0100
+++ rtorrent-0.8.6/src/command_network.cc	2011-06-03 12:00:18.000000000 +0200
@@ -469,2 +473,5 @@
 
+  ADD_COMMAND_SLOT("network.http.dns_cache_timeout",     call_unknown, rpc::object_void_fn(rak::make_mem_fun(httpStack, &core::CurlStack::dns_cache_timeout)), "i:", "");
+  ADD_COMMAND_SLOT("network.http.dns_cache_timeout.set", call_value,   rpc::object_value_fn(rak::make_mem_fun(httpStack, &core::CurlStack::set_dns_cache_timeout)), "i:i", "");
+
   ADD_COMMAND_VALUE_TRI("hash_max_tries",       std::ptr_fun(&torrent::set_hash_max_tries), rak::ptr_fun(&torrent::hash_max_tries));
--- orig/src/core/curl_stack.h	2009-11-12 09:03:44.000000000 +0100
+++ rtorrent-0.8.6/src/core/curl_stack.h	2011-06-03 12:07:25.000000000 +0200
@@ -91,2 +91,5 @@
 
+  int                 dns_cache_timeout() const              { return m_dns_cache_timeout; }
+  void                set_dns_cache_timeout(int t)           { m_dns_cache_timeout = t; }
+
   const std::string&  user_agent() const                     { return m_userAgent; }
@@ -132,2 +138,3 @@
 
+  int                 m_dns_cache_timeout;
   std::string         m_userAgent;
--- orig/src/core/curl_stack.cc	2009-11-12 09:03:44.000000000 +0100
+++ rtorrent-0.8.6/src/core/curl_stack.cc	2011-06-03 12:09:10.000000000 +0200
@@ -52,2 +52,3 @@
   m_handle((void*)curl_multi_init()),
+  m_dns_cache_timeout(60),
   m_active(0),
@@ -154,2 +156,3 @@
 
+  curl_easy_setopt(get->handle(), CURLOPT_DNS_CACHE_TIMEOUT, m_dns_cache_timeout);
   if (!m_httpProxy.empty())

