--- src/rpc/exec_file.cc	2012-03-14 19:39:35.000000000 +0100
+++ src/rpc/exec_file.cc	2012-03-14 19:53:13.000000000 +0100
@@ -48,2 +48,3 @@
 #include "parse.h"
+#include "thread_base.h"
 
@@ -80,2 +81,19 @@
   if (childPid == 0) {
+    if (flags & flag_background) {
+      pid_t detached_pid = fork();
+
+      if (detached_pid == -1)
+        _exit(-1);
+
+      if (detached_pid != 0) {
+        if (m_logFd != -1)
+          write(m_logFd, "\n--- Background task ---\n", sizeof("\n--- Background task ---\n"));
+        
+        _exit(0);
+      }
+
+      m_logFd = -1;
+      flags &= ~flag_capture;
+    }
+
     int devNull = open("/dev/null", O_RDWR);
@@ -109,4 +127,8 @@
     _exit(result);
+  }
+
+  // We yield the global lock when waiting for the executed command to
+  // finish so that XMLRPC and other threads can continue working.
+  ThreadBase::release_global_lock();
 
-  } else {
     if (flags & flag_capture) {
@@ -133,9 +155,2 @@
 
-    if (flags & flag_background) {
-      if (m_logFd != -1)
-        write(m_logFd, "\n--- Background task ---\n", sizeof("\n--- Background task ---\n"));
-        
-      return 0;
-    }
-
     int status;
@@ -147,2 +162,4 @@
 
+    ThreadBase::acquire_global_lock();
+
     if (wpid != childPid)
@@ -159,3 +176,2 @@
     return status;
-  }
 }
